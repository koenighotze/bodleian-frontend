name: Deploy tagged version

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      image-name:
        required: true
        description: "The name of the image that should be deployed, e.g., eu.gcr.io/<projectid>/koenighotze/bodleian-frontend:v0.0.25"

env:
  TARGET_REGISTRY: "eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}"
  GCP_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Checking out
        uses: actions/checkout@v3
      - name: Authenticating
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.CICD_SA_EMAIL_ADDRESS }}
          token_format: "access_token"
      - name: Setting up GCP environment
        uses: google-github-actions/setup-gcloud@v0.6.0
      - name: Containerizing
        id: containerizing
        run: ./scripts/containerize.sh
      - name: Scaning image
        uses: aquasecurity/trivy-action@0.6.0
        with:
          image-ref: "${{ github.event.inputs.image-name || steps.containerizing.outputs.image-name }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "MEDIUM,HIGH,CRITICAL"
      - name: Deploying to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.9.0
        with:
          image: "${{ github.event.inputs.image-name || steps.containerizing.outputs.image-name }}"
          service: "bodleian-frontend"
          region: "europe-west1"
      - name: Check if service is up
        run: |
          gcloud run services describe bodleian-frontend --region europe-west1
          curl -H "Authorization: Bearer $(gcloud auth print-identity-token)" "${{ steps.deploy.outputs.url }}"
      # - name: Slack Notify
      #   uses: rtCamp/action-slack-notify@v2.2.0
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_USERNAME: Bodleian
      #     SLACK_COLOR: "${{ job.status }}"
      #     SLACK_TITLE: "Frontend Deployment"
      #     SLACK_MESSAGE: "${{ github.event.inputs.image-name || steps.containerizing.outputs.image-name }} was deployed. Check it at ${{ steps.deploy.outputs.url }}"
      #     SLACK_FOOTER: "Best regards from Bodleian"
      #     MSG_MINIMAL: actions url
